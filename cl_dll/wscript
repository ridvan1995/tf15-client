#! /usr/bin/env python
# encoding: utf-8
# a1batross, mittorn, 2018

from waflib import Utils
import os

def options(opt):
	# stub
	return

def configure(conf):
	if conf.env.GOLDSRC and conf.env.DEST_OS != 'win32':
		conf.check_cc(lib='dl')

	if conf.env.DEST_OS == 'win32':
		conf.check_cxx(lib='user32')

def build(bld):
	source = bld.path.parent.ant_glob([
		'pm_shared/*.c',
		'dlls/tfc/tf_wpn_ac.cpp', 'dlls/tfc/tf_wpn_ar.cpp', 'dlls/tfc/tf_wpn_axe.cpp', 'dlls/tfc/tf_wpn_flame.cpp', 'dlls/tfc/tf_wpn_gl.cpp',
		'dlls/tfc/tf_wpn_ic.cpp', 'dlls/tfc/tf_wpn_ng.cpp', 'dlls/tfc/tf_wpn_railgun.cpp', 'dlls/tfc/tf_wpn_rpg.cpp', 'dlls/tfc/tf_wpn_sg.cpp',
		'dlls/tfc/tf_wpn_srifle.cpp',	'dlls/tfc/tf_wpn_tranq.cpp', 'dlls/crowbar.cpp'
	])

	source += bld.path.ant_glob(['tfc/*.cpp'])
	source += bld.path.parent.ant_glob(['common/interface.cpp'])
	source += [
		'ammo.cpp', 'ammo_secondary.cpp', 'ammohistory.cpp',
		'battery.cpp', 'cdll_int.cpp', 'com_weapons.cpp', 'death.cpp',
		'demo.cpp', 'entity.cpp', 'ev_common.cpp', 'events.cpp',
		'flashlight.cpp', 'GameStudioModelRenderer.cpp', 'geiger.cpp',
		'health.cpp', 'hud.cpp', 'hud_msg.cpp', 'hud_redraw.cpp',
		'hud_spectator.cpp', 'hud_update.cpp', 'in_camera.cpp',
		'input.cpp', 'input_goldsource.cpp', 'input_mouse.cpp',
		'input_xash3d.cpp', 'menu.cpp', 'message.cpp',
		'overview.cpp', 'parsemsg.cpp', 'saytext.cpp',
		'status_icons.cpp', 'statusbar.cpp', 'studio_util.cpp',
		'StudioModelRenderer.cpp', 'text_message.cpp', 'train.cpp',
		'tri.cpp', 'util.cpp', 'view.cpp', 'scoreboard.cpp', 'MOTD.cpp'
	]

	includes = [
		'.', 'tfc', '../dlls', '../dlls/tfc', '../common', '../engine',
		'../pm_shared', '../game_shared', '../public', '../utils/false_vgui/include'
	]

	defines = ['CLIENT_DLL']

	if bld.env.GOLDSRC:
		defines += ['GOLDSOURCE_SUPPORT']

	libs = []

	if bld.env.GOLDSRC and bld.env.DEST_OS != 'win32':
		libs += ['DL']

	if bld.env.DEST_OS == 'win32':
		libs += ['USER32']

	if bld.env.DEST_OS not in ['android']:
		install_path = os.path.join(bld.env.GAMEDIR, bld.env.CLIENT_DIR)
	else:
		install_path = bld.env.PREFIX

	bld.shlib(
		source   = source,
		target   = 'client' + bld.env.POSTFIX,
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)
